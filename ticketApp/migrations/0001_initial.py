# Generated by Django 5.2.5 on 2025-09-15 17:38

import django.core.validators
import django.db.models.deletion
import ticketApp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companyApp', '0002_companycontact_companylink_and_more'),
        ('projectApp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_key', models.CharField(blank=True, help_text='e.g., T-2025-AB12CD34', max_length=24, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('OPEN', 'Open'), ('PENDING', 'Pending Client'), ('INPROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='NEW', max_length=12)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10)),
                ('category', models.CharField(choices=[('CONTENT', 'Content'), ('BUG', 'Bug'), ('REQUEST', 'Feature/Request'), ('BILLING', 'Billing'), ('OTHER', 'Other')], default='OTHER', max_length=10)),
                ('last_client_reply_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_assigned', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='companyApp.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_created', to=settings.AUTH_USER_MODEL)),
                ('customer_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_opened', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='projectApp.project')),
                ('watchers', models.ManyToManyField(blank=True, related_name='ticket_watchlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at', 'pk'),
            },
        ),
        migrations.CreateModel(
            name='TicketEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('CREATED', 'Created'), ('ASSIGNED', 'Assigned'), ('STATUS', 'Status Change'), ('COMMENT', 'Comment'), ('ATTACHMENT', 'Attachment'), ('CLOSED', 'Closed')], max_length=12)),
                ('at', models.DateTimeField(auto_now_add=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='ticketApp.ticket')),
            ],
            options={
                'ordering': ('-at', 'pk'),
            },
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_kind', models.CharField(choices=[('STAFF', 'Staff'), ('CLIENT', 'Client')], default='STAFF', max_length=8)),
                ('body', models.TextField(blank=True)),
                ('is_internal', models.BooleanField(default=False, help_text='If true, client cannot see this message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_messages', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ticketApp.ticket')),
            ],
            options={
                'ordering': ('created_at', 'pk'),
            },
        ),
        migrations.CreateModel(
            name='TicketAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=ticketApp.models.ticket_upload_to, validators=[django.core.validators.FileExtensionValidator(['pdf', 'png', 'jpg', 'jpeg', 'webp', 'txt', 'docx', 'xlsx']), ticketApp.models.validate_file_size])),
                ('original_name', models.CharField(blank=True, max_length=200)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='ticketApp.ticketmessage')),
            ],
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['company', 'status'], name='ticketApp_t_company_d71f9b_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['assigned_to', 'status'], name='ticketApp_t_assigne_c2d8c7_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['public_key'], name='ticketApp_t_public__1bc233_idx'),
        ),
    ]
